{"ast":null,"code":"import _slicedToArray from\"F:\\\\freakstore\\\\projfrontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"../styles.css\";import{API}from\"../backend\";import Base from\"./Base\";import Card from\"./Card\";import{loadCart}from\"./helper/cartHelper\";import{isAutheticated}from\"../auth/helper\";var Cart=function Cart(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),products=_useState2[0],setProducts=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),reload=_useState4[0],setReload=_useState4[1];useEffect(function(){setProducts(loadCart());},[reload]);var loadAllProducts=function loadAllProducts(){return isAutheticated()&&/*#__PURE__*/React.createElement(\"div\",null,products.map(function(product,index){return/*#__PURE__*/React.createElement(Card,{key:index,product:product,removeFromCart:true,addtoCart:false,setReload:setReload,reload:reload});}));};return/*#__PURE__*/React.createElement(Base,{title:\"Cart Page\",description:\"Ready to checkout\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row text-center\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-6\"},loadAllProducts())));};export default Cart;","map":{"version":3,"sources":["F:/freakstore/projfrontend/src/core/Cart.js"],"names":["React","useState","useEffect","API","Base","Card","loadCart","isAutheticated","Cart","products","setProducts","reload","setReload","loadAllProducts","map","product","index"],"mappings":"wJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,eAAP,CACA,OAASC,GAAT,KAAoB,YAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,OAASC,QAAT,KAAyB,qBAAzB,CACA,OAASC,cAAT,KAA+B,gBAA/B,CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,eACeP,QAAQ,CAAC,EAAD,CADvB,wCACVQ,QADU,eACAC,WADA,8BAEWT,QAAQ,CAAC,KAAD,CAFnB,yCAEVU,MAFU,eAEFC,SAFE,eAIjBV,SAAS,CAAC,UAAM,CACdQ,WAAW,CAACJ,QAAQ,EAAT,CAAX,CACD,CAFQ,CAEN,CAACK,MAAD,CAFM,CAAT,CAIA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,MACEN,CAAAA,cAAc,iBACd,+BACGE,QAAQ,CAACK,GAAT,CAAa,SAACC,OAAD,CAAUC,KAAV,qBACZ,oBAAC,IAAD,EACE,GAAG,CAAEA,KADP,CAEE,OAAO,CAAED,OAFX,CAGE,cAAc,CAAE,IAHlB,CAIE,SAAS,CAAE,KAJb,CAKE,SAAS,CAAEH,SALb,CAME,MAAM,CAAED,MANV,EADY,EAAb,CADH,CAFF,CAgBD,CAjBD,CAkBA,mBACE,oBAAC,IAAD,EAAM,KAAK,CAAC,WAAZ,CAAwB,WAAW,CAAC,mBAApC,eACE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,SAAS,CAAC,OAAf,EAAwBE,eAAe,EAAvC,CADF,CADF,CADF,CAOD,CAjCD,CAmCA,cAAeL,CAAAA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles.css\";\nimport { API } from \"../backend\";\nimport Base from \"./Base\";\nimport Card from \"./Card\";\nimport { loadCart } from \"./helper/cartHelper\";\nimport { isAutheticated } from \"../auth/helper\";\n\nconst Cart = () => {\n  const [products, setProducts] = useState([]);\n  const [reload, setReload] = useState(false);\n\n  useEffect(() => {\n    setProducts(loadCart());\n  }, [reload]);\n\n  const loadAllProducts = () => {\n    return (\n      isAutheticated()&&(\n      <div>\n        {products.map((product, index) => (\n          <Card\n            key={index}\n            product={product}\n            removeFromCart={true}\n            addtoCart={false}\n            setReload={setReload}\n            reload={reload}\n          />\n        ))}\n      </div>\n      )\n    );\n  };\n  return (\n    <Base title=\"Cart Page\" description=\"Ready to checkout\">\n      <div className=\"row text-center\">\n        <div className=\"col-6\">{loadAllProducts()}</div>\n      </div>\n    </Base>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}